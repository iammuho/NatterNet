// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mongodb_mock is a generated GoMock package.
package mongodb_mock

import (
	reflect "reflect"

	mongo "go.mongodb.org/mongo-driver/mongo"
	gomock "go.uber.org/mock/gomock"
)

// MockMongoDBContext is a mock of MongoDBContext interface.
type MockMongoDBContext struct {
	ctrl     *gomock.Controller
	recorder *MockMongoDBContextMockRecorder
}

// MockMongoDBContextMockRecorder is the mock recorder for MockMongoDBContext.
type MockMongoDBContextMockRecorder struct {
	mock *MockMongoDBContext
}

// NewMockMongoDBContext creates a new mock instance.
func NewMockMongoDBContext(ctrl *gomock.Controller) *MockMongoDBContext {
	mock := &MockMongoDBContext{ctrl: ctrl}
	mock.recorder = &MockMongoDBContextMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMongoDBContext) EXPECT() *MockMongoDBContextMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockMongoDBContext) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockMongoDBContextMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockMongoDBContext)(nil).Close))
}

// GetConn mocks base method.
func (m *MockMongoDBContext) GetConn() *mongo.Client {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConn")
	ret0, _ := ret[0].(*mongo.Client)
	return ret0
}

// GetConn indicates an expected call of GetConn.
func (mr *MockMongoDBContextMockRecorder) GetConn() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConn", reflect.TypeOf((*MockMongoDBContext)(nil).GetConn))
}

// GetDatabase mocks base method.
func (m *MockMongoDBContext) GetDatabase() *mongo.Database {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDatabase")
	ret0, _ := ret[0].(*mongo.Database)
	return ret0
}

// GetDatabase indicates an expected call of GetDatabase.
func (mr *MockMongoDBContextMockRecorder) GetDatabase() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDatabase", reflect.TypeOf((*MockMongoDBContext)(nil).GetDatabase))
}

// Ping mocks base method.
func (m *MockMongoDBContext) Ping() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ping")
	ret0, _ := ret[0].(error)
	return ret0
}

// Ping indicates an expected call of Ping.
func (mr *MockMongoDBContextMockRecorder) Ping() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ping", reflect.TypeOf((*MockMongoDBContext)(nil).Ping))
}
