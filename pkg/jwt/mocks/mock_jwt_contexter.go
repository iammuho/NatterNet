// Code generated by MockGen. DO NOT EDIT.
// Source: types.go

// Package mockjwt is a generated GoMock package.
package mockjwt

import (
	reflect "reflect"

	errorhandler "github.com/iammuho/natternet/pkg/errorhandler"
	jwt "github.com/iammuho/natternet/pkg/jwt"
	gomock "go.uber.org/mock/gomock"
)

// MockJwtContext is a mock of JwtContext interface.
type MockJwtContext struct {
	ctrl     *gomock.Controller
	recorder *MockJwtContextMockRecorder
}

// MockJwtContextMockRecorder is the mock recorder for MockJwtContext.
type MockJwtContextMockRecorder struct {
	mock *MockJwtContext
}

// NewMockJwtContext creates a new mock instance.
func NewMockJwtContext(ctrl *gomock.Controller) *MockJwtContext {
	mock := &MockJwtContext{ctrl: ctrl}
	mock.recorder = &MockJwtContextMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJwtContext) EXPECT() *MockJwtContextMockRecorder {
	return m.recorder
}

// CreatePair mocks base method.
func (m *MockJwtContext) CreatePair(claims map[string]interface{}) (*jwt.JWTResponse, *errorhandler.Response) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePair", claims)
	ret0, _ := ret[0].(*jwt.JWTResponse)
	ret1, _ := ret[1].(*errorhandler.Response)
	return ret0, ret1
}

// CreatePair indicates an expected call of CreatePair.
func (mr *MockJwtContextMockRecorder) CreatePair(claims interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePair", reflect.TypeOf((*MockJwtContext)(nil).CreatePair), claims)
}

// ParseJWT mocks base method.
func (m *MockJwtContext) ParseJWT(auth string) (map[string]interface{}, *errorhandler.Response) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ParseJWT", auth)
	ret0, _ := ret[0].(map[string]interface{})
	ret1, _ := ret[1].(*errorhandler.Response)
	return ret0, ret1
}

// ParseJWT indicates an expected call of ParseJWT.
func (mr *MockJwtContextMockRecorder) ParseJWT(auth interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ParseJWT", reflect.TypeOf((*MockJwtContext)(nil).ParseJWT), auth)
}
